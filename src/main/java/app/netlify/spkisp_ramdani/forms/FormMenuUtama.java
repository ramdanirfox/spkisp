/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package app.netlify.spkisp_ramdani.forms;

import app.netlify.spkisp_ramdani.models.ModelExternalListener;
import app.netlify.spkisp_ramdani.panels.PanelAlternatif;
import app.netlify.spkisp_ramdani.panels.PanelBeranda;
import app.netlify.spkisp_ramdani.panels.PanelKriteria;
import app.netlify.spkisp_ramdani.panels.PanelMenu;
import app.netlify.spkisp_ramdani.utils.UtilsGlobal;
import app.netlify.spkisp_ramdani.utils.UtilsStatic;
import aurelienribon.slidinglayout.SLAnimator;
import aurelienribon.slidinglayout.SLConfig;
import aurelienribon.slidinglayout.SLKeyframe;
import aurelienribon.slidinglayout.SLPanel;
import aurelienribon.slidinglayout.SLSide;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.Icon;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

/**
 *
 * @author iramd
 */
public class FormMenuUtama extends javax.swing.JFrame {

    /**
     * Creates new form FormMenuUtama
     */
    public FormMenuUtama() {
        initComponents();
        decorateWindow();
        fnSetupMenu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        sLPanel2 = new aurelienribon.slidinglayout.SLPanel();
        jPanel1 = new javax.swing.JPanel();
        kButton1 = new com.k33ptoo.components.KButton();
        kButton2 = new com.k33ptoo.components.KButton();
        kButton3 = new com.k33ptoo.components.KButton();
        kButton4 = new com.k33ptoo.components.KButton();
        kButton5 = new com.k33ptoo.components.KButton();
        kButton6 = new com.k33ptoo.components.KButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        kButton7 = new com.k33ptoo.components.KButton();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistem Pendukung Keputusan ISP");

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel1MouseEntered(evt);
            }
        });
        jPanel1.setLayout(new java.awt.GridBagLayout());

        kButton1.setBorder(null);
        kButton1.setIcon(iconLogo);
        kButton1.setText("Beranda");
        kButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 49;
        gridBagConstraints.ipady = 29;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 20, 0, 0);
        jPanel1.add(kButton1, gridBagConstraints);

        kButton2.setBorder(null);
        kButton2.setText("Perhitungan");
        kButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 27;
        gridBagConstraints.ipady = 29;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 20, 0, 0);
        jPanel1.add(kButton2, gridBagConstraints);

        kButton3.setBorder(null);
        kButton3.setText("Nilai Bobot");
        kButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 33;
        gridBagConstraints.ipady = 29;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 20, 0, 0);
        jPanel1.add(kButton3, gridBagConstraints);

        kButton4.setBorder(null);
        kButton4.setText("Data Kriteria");
        kButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 28;
        gridBagConstraints.ipady = 29;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 20, 0, 0);
        jPanel1.add(kButton4, gridBagConstraints);

        kButton5.setBorder(null);
        kButton5.setText("Riwayat");
        kButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.ipadx = 51;
        gridBagConstraints.ipady = 29;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 20, 0, 0);
        jPanel1.add(kButton5, gridBagConstraints);

        kButton6.setBorder(null);
        kButton6.setText("Profil");
        kButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.ipadx = 64;
        gridBagConstraints.ipady = 29;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 20, 0, 0);
        jPanel1.add(kButton6, gridBagConstraints);

        jButton3.setText("Pengaturan");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(72, 21, 6, 14);
        jPanel1.add(jButton3, gridBagConstraints);

        jButton2.setIcon(UtilsStatic.getResizedIcon("logo.png"));
        jButton2.setText("x");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(23, 90, 0, 0);
        jPanel1.add(jButton2, gridBagConstraints);

        jButton4.setText("Log");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 62, 0, 0);
        jPanel1.add(jButton4, gridBagConstraints);

        kButton7.setBorder(null);
        kButton7.setText("Alternatif");
        kButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 43;
        gridBagConstraints.ipady = 29;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 20, 0, 0);
        jPanel1.add(kButton7, gridBagConstraints);

        sLPanel2.add(jPanel1);
        jPanel1.setBounds(0, 0, 140, 600);

        jPanel2.setBackground(new java.awt.Color(204, 255, 51));
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel2MouseEntered(evt);
            }
        });
        jPanel2.setLayout(new java.awt.GridBagLayout());
        sLPanel2.add(jPanel2);
        jPanel2.setBounds(160, 0, 720, 600);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sLPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 898, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sLPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 712, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
           closePanel();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jPanel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseEntered
        openPanel();      // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1MouseEntered

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        FormPengaturan a = new FormPengaturan();
        a.setVisible(true);
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void kButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton1ActionPerformed
        // TODO add your handling code here:
        fnGantiMenu(new PanelBeranda());
    }//GEN-LAST:event_kButton1ActionPerformed

    private void kButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kButton2ActionPerformed

    private void kButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kButton3ActionPerformed

    private void kButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton4ActionPerformed
        // TODO add your handling code here:
        fnGantiMenu(new PanelKriteria());
    }//GEN-LAST:event_kButton4ActionPerformed

    private void kButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kButton5ActionPerformed

    private void kButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kButton6ActionPerformed

    private void jPanel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseEntered
        // TODO add your handling code here:
        closePanel();
    }//GEN-LAST:event_jPanel2MouseEntered

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        (new FormTampilanLog()).setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void kButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton7ActionPerformed
        // TODO add your handling code here:
        fnGantiMenu(new PanelAlternatif());
    }//GEN-LAST:event_kButton7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormMenuUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormMenuUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormMenuUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormMenuUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormMenuUtama().setVisible(true);
            }
        });
    }
    
    public void fnGantiMenu(JPanel konten) {
        jPanel2.removeAll();
        JPanel reChange2 = konten;
        JScrollPane reChangeScroll = new javax.swing.JScrollPane(reChange2);
        reChangeScroll.setBorder(null);
//        reChange2.setBackground(Color.white);
//        reChange2.setSize(jPanel2.getWidth(), jPanel2.getHeight());
//        reChange2.setBounds(0, 0, 240, 225);
        java.awt.GridBagConstraints gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 84;
        gridBagConstraints.ipady = 84;
        jPanel2.add(reChangeScroll, gridBagConstraints);
        invalidate(); // Changed here
        repaint(); // Changed
//        sLPanel2.createTransition().play();
        openPanelForce();
//        sLPanel2.repaint();
    }
    
    private void fnSetupMenu() {
        jPanel1.removeAll();
        PanelMenu reChange2 = new PanelMenu();
        JScrollPane reChangeScroll = new javax.swing.JScrollPane(reChange2);
//        reChangeScroll.setBorder(null);
        java.awt.GridBagConstraints gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 0;
        gridBagConstraints.ipady = 0;
        jPanel1.add(reChangeScroll, gridBagConstraints);
        reChange2.fnAttachListener(new ModelExternalListener<String>() {
            @Override
            public void listen(String param) {
                super.listen(param); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/OverriddenMethodBody
                UtilsStatic.LOGGER.info("Tes Call " + param);
                if (param.equals("Alternatif")) { fnGantiMenu(new PanelAlternatif()); }
                if (param.equals("Beranda")) { fnGantiMenu(new PanelBeranda()); }
            }
        });
//        invalidate(); // Changed here
//        repaint(); // Changed
    }
    
    private void openPanelForce() {
//        if (!"unstable".equals(sLPanelState) && !"opened".equals(sLPanelState)) {
//            sLPanelState = "unstable";
            SLConfig showCfg = new SLConfig(sLPanel2)
                            .gap(0, 10)
                            .row(1f).col(200)
                            .place(0, 0, jPanel1);
               sLPanel2.createTransition()
                .push(new SLKeyframe(showCfg, 1f)
                        .setEndSide(SLSide.RIGHT, jPanel2)
                        .setCallback(new SLKeyframe.Callback() {@Override public void done() {
                            java.awt.EventQueue.invokeLater(new Runnable() {
                                public void run() {
                                UtilsStatic.LOGGER.info("Panel Shown Refreshing");
                                sLPanelState = "opened";
                                SLConfig showCfg2 = new SLConfig(sLPanel2)
                                            .gap(0, 0)
                                            .row(1f).col(200).col(1f)
                                            .place(0, 0, jPanel1)
                                            .place(0, 1, jPanel2);
                               sLPanel2.createTransition()
                                .push(new SLKeyframe(showCfg2, 1f)
                                        .setStartSide(SLSide.LEFT, jPanel2)
                                        .setEndSide(SLSide.LEFT)
                                        .setCallback(new SLKeyframe.Callback() {@Override public void done() {
                                                UtilsStatic.LOGGER.info("Panel Shown Refresh Done");
                                                sLPanelState = "opened";
                                        }}))
                                .play();
                                UtilsStatic.LOGGER.info("Opening Panel (Forced)"); 
                              }});
                        }}))
                .play();
               
//        }
    }
    
    private void openPanel() {
        if (!"unstable".equals(sLPanelState) && !"opened".equals(sLPanelState)) {
            sLPanelState = "unstable";
            SLConfig showCfg = new SLConfig(sLPanel2)
                            .gap(0, 0)
                            .row(1f).col(200).col(1f)
                            .place(0, 0, jPanel1)
                            .place(0, 1, jPanel2);
               sLPanel2.createTransition()
                .push(new SLKeyframe(showCfg, 0.5f)
                        .setEndSide(SLSide.LEFT)
                        .setCallback(new SLKeyframe.Callback() {@Override public void done() {
                                UtilsStatic.LOGGER.info("Panel Shown");
                                sLPanelState = "opened";
                        }}))
                .play();
                UtilsStatic.LOGGER.info("Opening Panel"); 
        }
    }
    
    private void closePanel() {
        if (!"unstable".equals(sLPanelState) && !"closed".equals(sLPanelState)) {
            sLPanelState = "unstable";
              SLConfig showCfg = new SLConfig(sLPanel2)
                            .gap(0, 0)
                            .row(1f).col(60).col(1f)
                            .place(0, 0, jPanel1)
                            .place(0, 1, jPanel2);
            sLPanel2.createTransition()
                .push(new SLKeyframe(showCfg, 0.5f)
                        .setEndSide(SLSide.LEFT)
                        .setCallback(new SLKeyframe.Callback() {@Override public void done() {
                                UtilsStatic.LOGGER.info("Panel Closed");
                                sLPanelState = "closed";
                        }}))
                .play();
            UtilsStatic.LOGGER.info("Closing Panel");
        }
    }
    
    String sLPanelState = "closed";
    UtilsGlobal spkUtil = new UtilsGlobal();
    javax.swing.ImageIcon iconLogo = new javax.swing.ImageIcon(spkUtil.getAsset("logo.png"));
    private void decorateWindow() {
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frameSize = getSize();
        setLocation((screenSize.width - frameSize.width)/2,(screenSize.height-frameSize.height)/2);
        setIconImage(Toolkit.getDefaultToolkit().getImage(spkUtil.getAsset("logo.png")));
        
        SLConfig mainCfg = new SLConfig(sLPanel2)
			.gap(0, 0)
			.row(1f).col(60).col(4f)
			.place(0, 0, jPanel1)
			.place(0, 1, jPanel2);
        
        SLAnimator.stop();
        SLAnimator.start();
        sLPanel2.setTweenManager(SLAnimator.createTweenManager());
        sLPanel2.initialize(mainCfg);
        jPanel1.setCursor(new Cursor(Cursor.HAND_CURSOR) {
        });
        fnGantiMenu(new PanelBeranda());
//        closePanel();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private com.k33ptoo.components.KButton kButton1;
    private com.k33ptoo.components.KButton kButton2;
    private com.k33ptoo.components.KButton kButton3;
    private com.k33ptoo.components.KButton kButton4;
    private com.k33ptoo.components.KButton kButton5;
    private com.k33ptoo.components.KButton kButton6;
    private com.k33ptoo.components.KButton kButton7;
    private aurelienribon.slidinglayout.SLPanel sLPanel2;
    // End of variables declaration//GEN-END:variables
    
}

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package app.netlify.spkisp_ramdani.panels;

import app.netlify.spkisp_ramdani.models.ModelExternalListener;
import app.netlify.spkisp_ramdani.utils.UtilsStatic;
import aurelienribon.slidinglayout.SLAnimator;
import aurelienribon.slidinglayout.SLConfig;
import aurelienribon.slidinglayout.SLKeyframe;
import aurelienribon.slidinglayout.SLSide;

/**
 *
 * @author iramd
 */
public class PanelMenu extends javax.swing.JPanel {
    ModelExternalListener extListener;
    /**
     * Creates new form PanelMenu
     */
    public PanelMenu() {
        initComponents();
        decorateWindow();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        sLPanel1 = new aurelienribon.slidinglayout.SLPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        bBeranda = new com.k33ptoo.components.KButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        bAlternatif = new com.k33ptoo.components.KButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        bNilaiBobot = new com.k33ptoo.components.KButton();

        addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                formComponentAdded(evt);
            }
        });
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        jPanel3.setBackground(new java.awt.Color(204, 255, 153));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Ikon");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 31, -1, -1));

        bBeranda.setText("Beranda");
        bBeranda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBerandaActionPerformed(evt);
            }
        });
        jPanel3.add(bBeranda, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 140, 40));

        sLPanel1.add(jPanel3);
        jPanel3.setBounds(30, 20, 200, 80);

        jPanel4.setBackground(new java.awt.Color(204, 255, 153));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("Ikon");
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        bAlternatif.setText("Alternatif");
        bAlternatif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAlternatifActionPerformed(evt);
            }
        });
        jPanel4.add(bAlternatif, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 140, 40));

        sLPanel1.add(jPanel4);
        jPanel4.setBounds(30, 110, 200, 80);

        jPanel5.setBackground(new java.awt.Color(204, 255, 153));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setText("Ikon");
        jPanel5.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        bNilaiBobot.setText("Nilai Bobot");
        jPanel5.add(bNilaiBobot, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 140, 40));

        sLPanel1.add(jPanel5);
        jPanel5.setBounds(30, 200, 200, 80);

        add(sLPanel1);
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_formComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentAdded

    private void bAlternatifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAlternatifActionPerformed
        // TODO add your handling code here:
        testTransition();
    }//GEN-LAST:event_bAlternatifActionPerformed

    private void bBerandaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBerandaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bBerandaActionPerformed

    private void decorateWindow() {
    SLConfig mainCfg = new SLConfig(sLPanel1)
			.gap(1, 0)
			.row(1f)
                        .row(1f)
                        .row(1f).col(200) // to 60
			 .place(0, 0, jPanel3)
			 .place(1, 0, jPanel4)
                         .place(2, 0, jPanel5);
        SLAnimator.stop();
        SLAnimator.start();
        sLPanel1.setTweenManager(SLAnimator.createTweenManager());
        sLPanel1.initialize(mainCfg);
    
        bBeranda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extListener.listen("Beranda");
            }
        });
        
        bAlternatif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extListener.listen("Alternatif");
            }
        });
    }
    
    private void testTransition() {
            SLConfig showCfg = new SLConfig(sLPanel1)
                            .gap(0, 0)
//                            .row(1f)
                            .row(1f)
                            .row(1f).col(200)
                            .place(0, 0, jPanel3)
                            .place(1, 0, jPanel4);
//                            .place(2, 0, jPanel5);
               sLPanel1.createTransition()
                .push(new SLKeyframe(showCfg, 0.5f)
                        .setEndSide(SLSide.LEFT)
                        .setCallback(new SLKeyframe.Callback() {@Override public void done() {
                                UtilsStatic.LOGGER.info("Inner Panel Shown");
                        }}))
                .play();
                UtilsStatic.LOGGER.info("Opening Panel"); 
    }
    
    public void fnAttachListener(ModelExternalListener<String> param) {
        extListener = param;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.k33ptoo.components.KButton bAlternatif;
    private com.k33ptoo.components.KButton bBeranda;
    private com.k33ptoo.components.KButton bNilaiBobot;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private aurelienribon.slidinglayout.SLPanel sLPanel1;
    // End of variables declaration//GEN-END:variables
}
